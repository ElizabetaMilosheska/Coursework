{
	"info": {
		"_postman_id": "a4c18de7-2feb-4ae7-9f44-cc7c983de9dd",
		"name": "RickandMorty_api",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "28758770"
	},
	"item": [
		{
			"name": "GET",
			"item": [
				{
					"name": "Baby Poopybutthole",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema ={\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"species\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"gender\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"origin\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"name\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"location\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"name\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"image\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"episode\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"created\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"name\",\r",
									"    \"status\",\r",
									"    \"species\",\r",
									"    \"type\",\r",
									"    \"gender\",\r",
									"    \"origin\",\r",
									"    \"location\",\r",
									"    \"image\",\r",
									"    \"episode\",\r",
									"    \"url\",\r",
									"    \"created\"\r",
									"  ]\r",
									"};\r",
									"pm.test(\"Baby Poopybutthole status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Validate schema Baby Poopybutthole\", () => {\r",
									"            pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"var template = `<!DOCTYPE html>\r",
									"<html lang=\"en\">\r",
									"<head>\r",
									"  <title>Bootstrap 5 Example</title>\r",
									"  <meta charset=\"utf-8\">\r",
									"  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r",
									"  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r",
									"  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\"></script>\r",
									"</head>\r",
									"<body>\r",
									"\r",
									"<div class=\"container-fluid p-5 bg-primary text-white text-center\">\r",
									"  <h1>Reqres API</h1>\r",
									"</div>\r",
									"  \r",
									"<div class=\"container mt-5\">\r",
									"  <div class=\"row\">\r",
									"    <div class=\"col-sm-12\">\r",
									"      <h3>List users</h3>\r",
									"      <p>\r",
									"               <table class=\"table\">\r",
									"               \t<thead>\r",
									"                  <tr>\r",
									"                      <th>id</th>\r",
									"                      <th>name</th>\r",
									"                      <th>status</th>\r",
									"                      <th>species</th>\r",
									"                      <th>gender</th>\r",
									"                  </tr>\r",
									"\t\t\t\t</thead>\r",
									"                <tbody>\r",
									"                  {{#each response}}\r",
									"                      <tr>\r",
									"                          <td>{{id}}</td>\r",
									"                          <td>{{name}}</td>\r",
									"                          <td>{{status}}</td>\r",
									"                          <td>{{species}}</td>\r",
									"                          <td>{{gender}}</td>\r",
									"                      </tr>\r",
									"                  {{/each}}\r",
									"                </tbody>\r",
									"              </table>   \r",
									"      </p>\r",
									"    </div>\r",
									"  </div>\r",
									"</div>\r",
									"\r",
									"</body>\r",
									"</html>\r",
									"\r",
									"`;\r",
									"// Set visualizer\r",
									"pm.visualizer.set(template, {\r",
									"    // Pass the response body parsed as JSON as `data`\r",
									"    response: pm.response.json()\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url_web_site_rickandmorty}}/api/character/30",
							"host": [
								"{{url_web_site_rickandmorty}}"
							],
							"path": [
								"api",
								"character",
								"30"
							]
						}
					},
					"response": []
				},
				{
					"name": "Pro trunk people marriage guy",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema =\r",
									"{\r",
									" \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"species\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"gender\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"origin\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"name\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"location\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"name\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"image\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"episode\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"created\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"name\",\r",
									"    \"status\",\r",
									"    \"species\",\r",
									"    \"type\",\r",
									"    \"gender\",\r",
									"    \"origin\",\r",
									"    \"location\",\r",
									"    \"image\",\r",
									"    \"episode\",\r",
									"    \"url\",\r",
									"    \"created\"\r",
									"  ]\r",
									"};\r",
									"pm.test(\"Pro trunk people marriage guy status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Validate schema Pro trunk people marriage guy\", () => {\r",
									"            pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"var template = `<!DOCTYPE html>\r",
									"<html lang=\"en\">\r",
									"<head>\r",
									"  <title>Bootstrap 5 Example</title>\r",
									"  <meta charset=\"utf-8\">\r",
									"  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r",
									"  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r",
									"  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\"></script>\r",
									"</head>\r",
									"<body>\r",
									"\r",
									"<div class=\"container-fluid p-5 bg-primary text-white text-center\">\r",
									"  <h1>Reqres API</h1>\r",
									"</div>\r",
									"  \r",
									"<div class=\"container mt-5\">\r",
									"  <div class=\"row\">\r",
									"    <div class=\"col-sm-12\">\r",
									"      <h3>List users</h3>\r",
									"      <p>\r",
									"               <table class=\"table\">\r",
									"               \t<thead>\r",
									"                  <tr>\r",
									"                      <th>id</th>\r",
									"                      <th>name</th>\r",
									"                      <th>status</th>\r",
									"                      <th>species</th>\r",
									"                      <th>gender</th>\r",
									"                  </tr>\r",
									"\t\t\t\t</thead>\r",
									"                <tbody>\r",
									"                  {{#each response}}\r",
									"                      <tr>\r",
									"                          <td>{{id}}</td>\r",
									"                          <td>{{name}}</td>\r",
									"                          <td>{{status}}</td>\r",
									"                          <td>{{species}}</td>\r",
									"                          <td>{{gender}}</td>\r",
									"                      </tr>\r",
									"                  {{/each}}\r",
									"                </tbody>\r",
									"              </table>   \r",
									"      </p>\r",
									"    </div>\r",
									"  </div>\r",
									"</div>\r",
									"\r",
									"</body>\r",
									"</html>\r",
									"\r",
									"`;\r",
									"// Set visualizer\r",
									"pm.visualizer.set(template, {\r",
									"    // Pass the response body parsed as JSON as `data`\r",
									"    response: pm.response.json()\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url_web_site_rickandmorty}}/api/character/415",
							"host": [
								"{{url_web_site_rickandmorty}}"
							],
							"path": [
								"api",
								"character",
								"415"
							]
						}
					},
					"response": []
				},
				{
					"name": "Glar",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema ={\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"species\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"gender\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"origin\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"name\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"location\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"name\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"image\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"episode\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"created\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"name\",\r",
									"    \"status\",\r",
									"    \"species\",\r",
									"    \"type\",\r",
									"    \"gender\",\r",
									"    \"origin\",\r",
									"    \"location\",\r",
									"    \"image\",\r",
									"    \"episode\",\r",
									"    \"url\",\r",
									"    \"created\"\r",
									"  ]\r",
									"};\r",
									"pm.test(\"Glar status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Validate schema Glar\", () => {\r",
									"            pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"var template = `<!DOCTYPE html>\r",
									"<html lang=\"en\">\r",
									"<head>\r",
									"  <title>Bootstrap 5 Example</title>\r",
									"  <meta charset=\"utf-8\">\r",
									"  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r",
									"  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r",
									"  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\"></script>\r",
									"</head>\r",
									"<body>\r",
									"\r",
									"<div class=\"container-fluid p-5 bg-primary text-white text-center\">\r",
									"  <h1>Reqres API</h1>\r",
									"</div>\r",
									"  \r",
									"<div class=\"container mt-5\">\r",
									"  <div class=\"row\">\r",
									"    <div class=\"col-sm-12\">\r",
									"      <h3>List users</h3>\r",
									"      <p>\r",
									"               <table class=\"table\">\r",
									"               \t<thead>\r",
									"                  <tr>\r",
									"                      <th>id</th>\r",
									"                      <th>name</th>\r",
									"                      <th>status</th>\r",
									"                      <th>species</th>\r",
									"                      <th>gender</th>\r",
									"                  </tr>\r",
									"\t\t\t\t</thead>\r",
									"                <tbody>\r",
									"                  {{#each response}}\r",
									"                      <tr>\r",
									"                          <td>{{id}}</td>\r",
									"                          <td>{{name}}</td>\r",
									"                          <td>{{status}}</td>\r",
									"                          <td>{{species}}</td>\r",
									"                          <td>{{gender}}</td>\r",
									"                      </tr>\r",
									"                  {{/each}}\r",
									"                </tbody>\r",
									"              </table>   \r",
									"      </p>\r",
									"    </div>\r",
									"  </div>\r",
									"</div>\r",
									"\r",
									"</body>\r",
									"</html>\r",
									"\r",
									"`;\r",
									"// Set visualizer\r",
									"pm.visualizer.set(template, {\r",
									"    // Pass the response body parsed as JSON as `data`\r",
									"    response: pm.response.json()\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url_web_site_rickandmorty}}/api/character/547",
							"host": [
								"{{url_web_site_rickandmorty}}"
							],
							"path": [
								"api",
								"character",
								"547"
							]
						}
					},
					"response": []
				},
				{
					"name": "Bruce",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema =\r",
									"{\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"species\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"gender\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"origin\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"name\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"location\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"name\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"image\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"episode\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"created\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"name\",\r",
									"    \"status\",\r",
									"    \"species\",\r",
									"    \"type\",\r",
									"    \"gender\",\r",
									"    \"origin\",\r",
									"    \"location\",\r",
									"    \"image\",\r",
									"    \"episode\",\r",
									"    \"url\",\r",
									"    \"created\"\r",
									"  ]\r",
									"};\r",
									"pm.test(\"Bruce status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Validate schema Bruce\", () => {\r",
									"            pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"var template = `<!DOCTYPE html>\r",
									"<html lang=\"en\">\r",
									"<head>\r",
									"  <title>Bootstrap 5 Example</title>\r",
									"  <meta charset=\"utf-8\">\r",
									"  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r",
									"  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r",
									"  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\"></script>\r",
									"</head>\r",
									"<body>\r",
									"\r",
									"<div class=\"container-fluid p-5 bg-primary text-white text-center\">\r",
									"  <h1>Reqres API</h1>\r",
									"</div>\r",
									"  \r",
									"<div class=\"container mt-5\">\r",
									"  <div class=\"row\">\r",
									"    <div class=\"col-sm-12\">\r",
									"      <h3>List users</h3>\r",
									"      <p>\r",
									"               <table class=\"table\">\r",
									"               \t<thead>\r",
									"                  <tr>\r",
									"                      <th>id</th>\r",
									"                      <th>name</th>\r",
									"                      <th>status</th>\r",
									"                      <th>species</th>\r",
									"                      <th>gender</th>\r",
									"                      <th>url</th>\r",
									"                  </tr>\r",
									"\t\t\t\t</thead>\r",
									"                <tbody>\r",
									"                  {{#each response}}\r",
									"                      <tr>\r",
									"                          <td>{{id}}</td>\r",
									"                          <td>{{name}}</td>\r",
									"                          <td>{{status}}</td>\r",
									"                          <td>{{species}}</td>\r",
									"                          <td>{{gender}}</td>\r",
									"                          <td>{{url}}</td>\r",
									"                      </tr>\r",
									"                  {{/each}}\r",
									"                </tbody>\r",
									"              </table>   \r",
									"      </p>\r",
									"    </div>\r",
									"  </div>\r",
									"</div>\r",
									"\r",
									"</body>\r",
									"</html>\r",
									"\r",
									"`;\r",
									"// Set visualizer\r",
									"pm.visualizer.set(template, {\r",
									"    // Pass the response body parsed as JSON as `data`\r",
									"    response: pm.response.json()\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url_web_site_rickandmorty}}/api/character/641",
							"host": [
								"{{url_web_site_rickandmorty}}"
							],
							"path": [
								"api",
								"character",
								"641"
							]
						}
					},
					"response": []
				},
				{
					"name": "New Improved Galactic Federation Guard",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema =\r",
									"{\r",
									"  \r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"species\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"gender\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"origin\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"name\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"location\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"name\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"image\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"episode\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"created\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"name\",\r",
									"    \"status\",\r",
									"    \"species\",\r",
									"    \"type\",\r",
									"    \"gender\",\r",
									"    \"origin\",\r",
									"    \"location\",\r",
									"    \"image\",\r",
									"    \"episode\",\r",
									"    \"url\",\r",
									"    \"created\"\r",
									"  ]\r",
									"};\r",
									"pm.test(\"New Improved Galactic Federation Guard Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Validate schema New Improved Galactic Federation Guard\", () => {\r",
									"            pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"var template = `<!DOCTYPE html>\r",
									"<html lang=\"en\">\r",
									"<head>\r",
									"  <title>Bootstrap 5 Example</title>\r",
									"  <meta charset=\"utf-8\">\r",
									"  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r",
									"  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r",
									"  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\"></script>\r",
									"</head>\r",
									"<body>\r",
									"\r",
									"<div class=\"container-fluid p-5 bg-primary text-white text-center\">\r",
									"  <h1>Reqres API</h1>\r",
									"</div>\r",
									"  \r",
									"<div class=\"container mt-5\">\r",
									"  <div class=\"row\">\r",
									"    <div class=\"col-sm-12\">\r",
									"      <h3>List users</h3>\r",
									"      <p>\r",
									"               <table class=\"table\">\r",
									"               \t<thead>\r",
									"                  <tr>\r",
									"                      <th>id</th>\r",
									"                      <th>name</th>\r",
									"                      <th>status</th>\r",
									"                      <th>species</th>\r",
									"                      <th>gender</th>\r",
									"                      <th>url</th>\r",
									"                  </tr>\r",
									"\t\t\t\t</thead>\r",
									"                <tbody>\r",
									"                  {{#each response}}\r",
									"                      <tr>\r",
									"                          <td>{{id}}</td>\r",
									"                          <td>{{name}}</td>\r",
									"                          <td>{{status}}</td>\r",
									"                          <td>{{species}}</td>\r",
									"                          <td>{{gender}}</td>\r",
									"                          <td>{{url}}</td>\r",
									"                      </tr>\r",
									"                  {{/each}}\r",
									"                </tbody>\r",
									"              </table>   \r",
									"      </p>\r",
									"    </div>\r",
									"  </div>\r",
									"</div>\r",
									"\r",
									"</body>\r",
									"</html>\r",
									"\r",
									"`;\r",
									"// Set visualizer\r",
									"pm.visualizer.set(template, {\r",
									"    // Pass the response body parsed as JSON as `data`\r",
									"    response: pm.response.json()\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url_web_site_rickandmorty}}/api/character/670",
							"host": [
								"{{url_web_site_rickandmorty}}"
							],
							"path": [
								"api",
								"character",
								"670"
							]
						}
					},
					"response": []
				},
				{
					"name": "Martínez",
					"event": [
						{
							"listen": "test",
							"script": {
								"exec": [
									"const schema =\r",
									"{\r",
									"  \"type\": \"object\",\r",
									"  \"properties\": {\r",
									"    \"id\": {\r",
									"      \"type\": \"integer\"\r",
									"    },\r",
									"    \"name\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"status\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"species\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"type\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"gender\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"origin\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"name\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"location\": {\r",
									"      \"type\": \"object\",\r",
									"      \"properties\": {\r",
									"        \"name\": {\r",
									"          \"type\": \"string\"\r",
									"        },\r",
									"        \"url\": {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      },\r",
									"      \"required\": [\r",
									"        \"name\",\r",
									"        \"url\"\r",
									"      ]\r",
									"    },\r",
									"    \"image\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"episode\": {\r",
									"      \"type\": \"array\",\r",
									"      \"items\": [\r",
									"        {\r",
									"          \"type\": \"string\"\r",
									"        }\r",
									"      ]\r",
									"    },\r",
									"    \"url\": {\r",
									"      \"type\": \"string\"\r",
									"    },\r",
									"    \"created\": {\r",
									"      \"type\": \"string\"\r",
									"    }\r",
									"  },\r",
									"  \"required\": [\r",
									"    \"id\",\r",
									"    \"name\",\r",
									"    \"status\",\r",
									"    \"species\",\r",
									"    \"type\",\r",
									"    \"gender\",\r",
									"    \"origin\",\r",
									"    \"location\",\r",
									"    \"image\",\r",
									"    \"episode\",\r",
									"    \"url\",\r",
									"    \"created\"\r",
									"  ]\r",
									"};\r",
									"pm.test(\"Martínez Status code is 200\", function () {\r",
									"    pm.response.to.have.status(200);\r",
									"});\r",
									"pm.test(\"Validate schema Martínez\", () => {\r",
									"            pm.response.to.have.jsonSchema(schema);\r",
									"});\r",
									"var template = `<!DOCTYPE html>\r",
									"<html lang=\"en\">\r",
									"<head>\r",
									"  <title>Bootstrap 5 Example</title>\r",
									"  <meta charset=\"utf-8\">\r",
									"  <meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\r",
									"  <link href=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/css/bootstrap.min.css\" rel=\"stylesheet\">\r",
									"  <script src=\"https://cdn.jsdelivr.net/npm/bootstrap@5.3.1/dist/js/bootstrap.bundle.min.js\"></script>\r",
									"</head>\r",
									"<body>\r",
									"\r",
									"<div class=\"container-fluid p-5 bg-primary text-white text-center\">\r",
									"  <h1>Reqres API</h1>\r",
									"</div>\r",
									"  \r",
									"<div class=\"container mt-5\">\r",
									"  <div class=\"row\">\r",
									"    <div class=\"col-sm-12\">\r",
									"      <h3>List users</h3>\r",
									"      <p>\r",
									"               <table class=\"table\">\r",
									"               \t<thead>\r",
									"                  <tr>\r",
									"                      <th>id</th>\r",
									"                      <th>name</th>\r",
									"                      <th>status</th>\r",
									"                      <th>species</th>\r",
									"                      <th>gender</th>\r",
									"                      <th>url</th>\r",
									"                  </tr>\r",
									"\t\t\t\t</thead>\r",
									"                <tbody>\r",
									"                  {{#each response}}\r",
									"                      <tr>\r",
									"                          <td>{{id}}</td>\r",
									"                          <td>{{name}}</td>\r",
									"                          <td>{{status}}</td>\r",
									"                          <td>{{species}}</td>\r",
									"                          <td>{{gender}}</td>\r",
									"                          <td>{{url}}</td>\r",
									"                      </tr>\r",
									"                  {{/each}}\r",
									"                </tbody>\r",
									"              </table>   \r",
									"      </p>\r",
									"    </div>\r",
									"  </div>\r",
									"</div>\r",
									"\r",
									"</body>\r",
									"</html>\r",
									"\r",
									"`;\r",
									"// Set visualizer\r",
									"pm.visualizer.set(template, {\r",
									"    // Pass the response body parsed as JSON as `data`\r",
									"    response: pm.response.json()\r",
									"});"
								],
								"type": "text/javascript"
							}
						}
					],
					"request": {
						"method": "GET",
						"header": [],
						"url": {
							"raw": "{{url_web_site_rickandmorty}}/api/character/762",
							"host": [
								"{{url_web_site_rickandmorty}}"
							],
							"path": [
								"api",
								"character",
								"762"
							]
						}
					},
					"response": []
				}
			]
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "url_web_site_rickandmorty",
			"value": "https://rickandmortyapi.com/",
			"type": "string"
		}
	]
}